// Mocks generated by Mockito 5.2.0 from annotations
// in copilot/test/features/activities/data/repositories/activity_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:copilot/features/activities/data/datasources/activity_local_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ActivityLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityLocalDataSource extends _i1.Mock
    implements _i2.ActivityLocalDataSource {
  MockActivityLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<Map<String, dynamic>>> getActivities({int? from, int? to}) =>
      (super.noSuchMethod(
              Invocation.method(#getActivities, [], {#from: from, #to: to}),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i3.Future<List<Map<String, dynamic>>>);
  @override
  _i3.Future<Map<String, dynamic>> createRecord(
          {int? idActivity, DateTime? startTime, DateTime? endTime}) =>
      (super.noSuchMethod(
              Invocation.method(#createRecord, [], {
                #idActivity: idActivity,
                #startTime: startTime,
                #endTime: endTime
              }),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<void> updateRecordTime(
          {int? idRecord, DateTime? startTime, DateTime? endTime}) =>
      (super.noSuchMethod(
          Invocation.method(#updateRecordTime, [],
              {#idRecord: idRecord, #startTime: startTime, #endTime: endTime}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<Map<String, dynamic>> updateRecordSettings(
          {int? idRecord, int? idActivity}) =>
      (super.noSuchMethod(
              Invocation.method(#updateRecordSettings, [],
                  {#idRecord: idRecord, #idActivity: idActivity}),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<Map<String, dynamic>?> findActivitySettings(String? name) =>
      (super.noSuchMethod(Invocation.method(#findActivitySettings, [name]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i3.Future<Map<String, dynamic>?>);
  @override
  _i3.Future<void> createActivity(Map<String, dynamic>? activitySettings) =>
      (super.noSuchMethod(
          Invocation.method(#createActivity, [activitySettings]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> updateRecordEmoji(int? idRecord, String? emoji) => (super
      .noSuchMethod(Invocation.method(#updateRecordEmoji, [idRecord, emoji]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
